<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fund.mapper.MoneycheckMapper" >
  <resultMap id="BaseResultMap" type="com.fund.po.MoneyCheckCustom" >
    <id column="MoneyCheck_Id" property="moneycheckId" jdbcType="INTEGER" />
    <result column="Money_In_Count" property="moneyInCount" jdbcType="DOUBLE" />
    <result column="Money_Out_Count" property="moneyOutCount" jdbcType="DOUBLE" />
    <result column="MoneyState" property="moneystate" jdbcType="TINYINT" />
    <result column="State" property="state" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    MoneyCheck_Id, Money_In_Count, Money_Out_Count, MoneyState, State
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fund.po.MoneycheckExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from moneycheck
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from moneycheck
    where MoneyCheck_Id = #{moneycheckId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from moneycheck
    where MoneyCheck_Id = #{moneycheckId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fund.po.MoneycheckExample" >
    delete from moneycheck
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fund.po.MoneyCheckCustom" >
    insert into moneycheck (MoneyCheck_Id, Money_In_Count, Money_Out_Count, 
      MoneyState, State)
    values (#{moneycheckId,jdbcType=INTEGER}, #{moneyInCount,jdbcType=DOUBLE}, #{moneyOutCount,jdbcType=DOUBLE}, 
      #{moneystate,jdbcType=TINYINT}, #{state,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="moneycheckId" useGeneratedKeys="true" parameterType="com.fund.po.MoneyCheckCustom" >
    insert into moneycheck
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moneycheckId != null" >
        MoneyCheck_Id,
      </if>
      <if test="moneyInCount != null" >
        Money_In_Count,
      </if>
      <if test="moneyOutCount != null" >
        Money_Out_Count,
      </if>
      <if test="moneystate != null" >
        MoneyState,
      </if>
      <if test="state != null" >
        State,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moneycheckId != null" >
        #{moneycheckId,jdbcType=INTEGER},
      </if>
      <if test="moneyInCount != null" >
        #{moneyInCount,jdbcType=DOUBLE},
      </if>
      <if test="moneyOutCount != null" >
        #{moneyOutCount,jdbcType=DOUBLE},
      </if>
      <if test="moneystate != null" >
        #{moneystate,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fund.po.MoneycheckExample" resultType="java.lang.Integer" >
    select count(*) from moneycheck
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update moneycheck
    <set >
      <if test="record.moneycheckId != null" >
        MoneyCheck_Id = #{record.moneycheckId,jdbcType=INTEGER},
      </if>
      <if test="record.moneyInCount != null" >
        Money_In_Count = #{record.moneyInCount,jdbcType=DOUBLE},
      </if>
      <if test="record.moneyOutCount != null" >
        Money_Out_Count = #{record.moneyOutCount,jdbcType=DOUBLE},
      </if>
      <if test="record.moneystate != null" >
        MoneyState = #{record.moneystate,jdbcType=TINYINT},
      </if>
      <if test="record.state != null" >
        State = #{record.state,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update moneycheck
    set MoneyCheck_Id = #{record.moneycheckId,jdbcType=INTEGER},
      Money_In_Count = #{record.moneyInCount,jdbcType=DOUBLE},
      Money_Out_Count = #{record.moneyOutCount,jdbcType=DOUBLE},
      MoneyState = #{record.moneystate,jdbcType=TINYINT},
      State = #{record.state,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fund.po.MoneyCheckCustom" >
    update moneycheck
    <set >
      <if test="moneyInCount != null" >
        Money_In_Count = #{moneyInCount,jdbcType=DOUBLE},
      </if>
      <if test="moneyOutCount != null" >
        Money_Out_Count = #{moneyOutCount,jdbcType=DOUBLE},
      </if>
      <if test="moneystate != null" >
        MoneyState = #{moneystate,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        State = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where MoneyCheck_Id = #{moneycheckId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fund.po.MoneyCheckCustom" >
    update moneycheck
    set Money_In_Count = #{moneyInCount,jdbcType=DOUBLE},
      Money_Out_Count = #{moneyOutCount,jdbcType=DOUBLE},
      MoneyState = #{moneystate,jdbcType=TINYINT},
      State = #{state,jdbcType=TINYINT}
    where MoneyCheck_Id = #{moneycheckId,jdbcType=INTEGER}
  </update>
  
	<!-- 自定义resultMap -->
	<!-- <resultMap id="billsResultMap" type="com.fund.po.MoneyCheckCustom" >
	    <id column="MoneyCheck_Id" property="moneycheckId" jdbcType="INTEGER" />
	    <result column="Money_In_Count" property="moneyInCount" jdbcType="DOUBLE" />
	    <result column="Money_Out_Count" property="moneyOutCount" jdbcType="DOUBLE" />
	    <result column="MoneyState" property="moneystate" jdbcType="TINYINT" />
	    <result column="State" property="state" jdbcType="TINYINT" />
	    
	    <collection property="inBillList" ofType="com.fund.po.Inbill">
			<id column="InBill_Id" property="inbillId" jdbcType="INTEGER" />
		    <result column="MoneyCheck_Id" property="moneycheckId" jdbcType="INTEGER" />
		    <result column="Money_In" property="moneyIn" jdbcType="DOUBLE" />
		    <result column="Time_In" property="timeIn" jdbcType="TIMESTAMP" />
		    <result column="State" property="state" jdbcType="TINYINT" />
		</collection>
		 <collection property="outBillList" ofType="com.fund.po.Outbill">
			<id column="OutBill_Id" property="outbillId" jdbcType="INTEGER" />
		    <result column="MoneyCheck_Id" property="moneycheckId" jdbcType="INTEGER" />
		    <result column="Money_Out" property="moneyOut" jdbcType="DOUBLE" />
		    <result column="Time_Out" property="timeOut" jdbcType="TIMESTAMP" />
		    <result column="State" property="state" jdbcType="TINYINT" />
		</collection>
  	</resultMap> -->
	<!-- End -->
	
	<!-- 自定义SQL -->
	<!-- END -->
</mapper>